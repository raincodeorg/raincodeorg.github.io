{"version":3,"sources":["webpack:///./src/components/WeekDistance/style.js","webpack:///./src/components/WeekDistance/index.js","webpack:///./src/components/ProfileIntroSection/style.js","webpack:///./src/components/ProfileIntroSection/index.js","webpack:///./src/components/ProfileListItem/index.js","webpack:///./src/components/EventListItem/style.js","webpack:///./src/components/EventListItem/index.js","webpack:///./src/components/ProfileList/style.js","webpack:///./src/components/ProfileList/index.js","webpack:///./src/components/ProfileContent/style.js","webpack:///./src/components/ProfileContent/index.js","webpack:///./src/pages/profile.js"],"names":["loading","keyframes","DistanceWrapper","styled","div","withConfig","displayName","componentId","fonts","mono","colors","gray500","DistanceLoader","EmojiWrapper","span","Kilometers","a","WeekDistance","state","distance","componentDidMount","_this2","this","getWeekDistance","then","data","setState","e","getEmoji","react_default","createElement","role","aria-label","renderDistance","react","target","rel","href","render","className","props","Component","Wrapper","section","media","sm","_templateObject","InfoWrapper","Image","blue900","_templateObject2","_templateObject3","_templateObject4","header","md","_templateObject5","_templateObject6","Content","main","_templateObject7","yellow500","ProfileIntroSection","_ref","content","Intro","fixed","ProfileListItem","name","url","shared","Position","gray700","EventListItem","year","position","company","style_Wrapper","ListTitle","h2","ProfileList","title","list","ListsSection","style_templateObject","ClientsList","style_templateObject2","style_templateObject3","profileContent","gatsby_browser_entry","query","profile","info","edges","node","map","item","heading","paragraph","_1848502082","ProfileContent","clients","events","mentions","articles","Head","Object","assign","META","image","common","components_ProfileIntroSection","length","components_ProfileList","_ref2","i","event","components_EventListItem","key","_ref3","article","components_ProfileListItem","_ref4","mention","_ref5","client","__webpack_exports__","location","layout","_661396757"],"mappings":"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","file":"component---src-pages-profile-js-c772ddc4b49922954683.js","sourcesContent":["import styled, { keyframes } from 'styled-components'\nimport { fonts, colors } from '../../style/constants'\n\nexport const loading = keyframes`\n  0% {\n    background-position: -20rem 0;\n  }\n  \n  100% {\n    background-position: 20rem 0;\n  }\n`\n\nexport const DistanceWrapper = styled.div`\n  font-family: ${fonts.mono};\n  font-size: .9rem;\n  color: ${colors.gray500};\n`\n\nexport const DistanceLoader = styled.div`\n  display: inline-block;\n  height: 1rem;\n  width: 10rem;\n  animation-duration: .75s;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  animation-name: ${loading};\n  animation-timing-function: linear;\n  background: linear-gradient(to right, #273240 8%, #2c3644 18%, #273240 33%);\n  background-size: 800px 104px;\n  border-radius: 2px;\n`\n\nexport const EmojiWrapper = styled.span`\n  font-size: .95rem;\n  color: initial;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: .5rem;\n`\n\nexport const Kilometers = styled.a`\n  border-bottom: 1px dotted ${colors.gray500};\n  display: inline-block;\n  vertical-align: top;\n  color: #fff;\n`\n","import React, { Component, Fragment } from 'react'\nimport getWeekDistance from '../../utils/functions'\nimport { DistanceWrapper, DistanceLoader, EmojiWrapper, Kilometers } from './style'\n\nclass WeekDistance extends Component {\n  state = { distance: null }\n\n  componentDidMount() {\n    getWeekDistance()\n      .then(data => this.setState({ distance: data.distance }))\n      .catch(e => this.setState({ distance: null }))\n  }\n\n  getEmoji() {\n    const { distance } = this.state\n    \n    return distance >= 40 \n      ? <EmojiWrapper role=\"img\" aria-label=\"fire\">üî•</EmojiWrapper> \n      : <EmojiWrapper role=\"img\" aria-label=\"lighting\">‚ö°Ô∏è</EmojiWrapper>\n  }\n\n  renderDistance() {\n    const { distance } = this.state\n\n    return distance === 0 \n      ? <Fragment><EmojiWrapper role=\"img\" aria-label=\"sad face\">‚òπÔ∏è</EmojiWrapper>No km of running this week</Fragment>\n      : <Fragment>{this.getEmoji(distance)} I've run <Kilometers target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.strava.com/athletes/8681316\">{this.state.distance}km</Kilometers> this week</Fragment>\n  }\n\n  render() {\n    const { className } = this.props\n    \n    return (\n      this.state.distance !== null\n        ? <DistanceWrapper className={className}>{this.renderDistance()}</DistanceWrapper>\n        : <DistanceLoader className={className} />\n    )\n  }\n}\n\nexport default WeekDistance\n","import styled from 'styled-components'\nimport WeekDistance from '../WeekDistance'\nimport Image from '../Image'\nimport { colors, media } from '../../style/constants'\n\nexport const Wrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  position: relative;\n  ${media.sm`\n    grid-template-columns: 100%;\n    grid-template-rows: repeat(3, auto);\n    grid-row-gap: 2rem;\n  `}\n`\n\nexport const StyledImage = styled(Image)`\n  grid-area: 1 / 4 / last-line / end;\n  background: ${colors.blue900};\n  position: relative;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    padding-top: 150%;\n    display: block;\n    ${media.sm`\n      padding-top: 100%;\n    `}\n  }\n\n  img {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    margin: auto;\n    top: -100%;\n    right: -100%;\n    bottom: -100%;\n    left: -100%;\n    mix-blend-mode: darken;\n    opacity: .8;\n    display: block;\n    object-fit: cover;\n    ${media.sm`\n      opacity: .9;\n    `}\n  }\n\n  ${media.sm`\n    grid-area: 1 / 1 / 1 / 1;\n    &:before {\n      padding-top: 100%;\n    }\n  `}\n`\n\nexport const StyledWeekDistance = styled(WeekDistance)`\n  grid-row: 4 / last-line;\n  grid-column: 1 / span 4;\n  align-self: end;\n  z-index: 3;\n`\n\nexport const InfoWrapper = styled.header`\n  grid-row: 2 / 4;\n  grid-column: 1 / 6;\n  z-index: 3;\n  ${media.md`\n    grid-column: 1 / 7;\n  `}\n  ${media.sm`\n    grid-row: 2 / 3;\n    grid-column: 1 / 1;\n  `}\n`\n\nexport const Content = styled.main`\n  margin-top: 1rem;\n  line-height: 1.8em;\n  color: ${colors.gray500};\n  ${media.sm`\n    margin-top: 1rem;\n  `}\n\n  p {\n    margin: 1.5rem 0;\n  }\n\n  a {\n    color: #111;\n    border-bottom: 1px dotted ${colors.gray500};\n    \n    &:hover {\n      border-bottom-color: ${colors.yellow500};\n    }\n  }\n`\n","import React from 'react'\nimport Intro from '../Intro'\nimport { Wrapper, InfoWrapper, Content, StyledImage } from './style'\nimport { Loader } from '../../style/shared'\n\nconst ProfileIntroSection = ({ content }) => \n  <Wrapper>\n    <InfoWrapper>\n      <Intro fixed={false} />\n      <Content>{content()}</Content>\n    </InfoWrapper>\n{/*\n  ====================================\n        <StyledImage \n      src=\"/images/profile/profile.jpg\"\n      alt=\"Pattern\"\n      loader={({ isLoaded }) => <Loader isLoaded={isLoaded} />}\n      sources={[{\n        media: 'max-width: 40rem',\n        srcset: [\n          '/images/profile/profile-square.jpg 1x',\n          '/images/profile/profile-square-2x.jpg 2x',\n          '/images/profile/profile-square-3x.jpg 3x'\n        ]\n      },{\n        srcset: [\n          '/images/profile/profile.jpg 1x',\n          '/images/profile/profile-2x.jpg 2x',\n          '/images/profile/profile-3x.jpg 3x'\n        ]       \n      }]}\n    />\n  ====================================\n*/}\n  </Wrapper>\n\nexport default ProfileIntroSection\n","import React from 'react'\nimport { ListItem } from '../../style/shared'\n\nconst ProfileListItem = ({ name, url }) =>\n  <ListItem>\n    {url \n      ? <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{name}</a>\n      : name}\n  </ListItem>\n\nexport default ProfileListItem\n","import styled from 'styled-components'\nimport { colors } from '../../style/constants'\n\nexport const Position = styled.span`\n  border-bottom: 1px dotted ${colors.gray700};\n`\n\nexport const Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n\n  div {\n    transition: transform .3s cubic-bezier(.45, 0, .1, 1);\n    will-change: transform;\n  }\n\n  .position {\n    transform: translateY(0);\n  }\n\n  .year {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    transform: translateY(100%);\n    color: #FFF;\n    background: #000;\n    width: fit-content;\n    padding: 0 1rem;\n  }\n\n  &:hover {\n    .position {\n      transform: translateY(-100%);\n    }\n\n    .year {\n      transform: translateY(0);\n    }\n  }\n`\n","import React from 'react'\nimport { ListItem } from '../../style/shared'\nimport { Wrapper, Position } from './style'\n\nconst EventListItem = ({ year, position, company }) =>\n  <ListItem>\n    <Wrapper>\n      <div className=\"position\"><Position>{position}</Position><span>{company ? `:: ${company}` : ``}</span></div>\n      <div className=\"year\">{year}</div>\n    </Wrapper>\n  </ListItem>\n\nexport default EventListItem\n","import styled from 'styled-components'\nimport { colors } from '../../style/constants'\n\nexport const ListTitle = styled.h2`\n  color: #000;\n  font-size: 1.1rem;\n  font-weight: 400;\n  margin-bottom: 1rem;\n\n  &::after {\n    content: '';\n    width: 1rem;\n    height: 1px;\n    background: ${colors.yellow500};\n    display: inline-block;\n    vertical-align: middle;\n    margin-left: 1rem;\n  }\n`\n","import React from 'react'\nimport { ListTitle } from './style'\n\nconst ProfileList = ({ title, list, className }) =>\n  <article className={className}>\n    <header>\n      <ListTitle>{title}</ListTitle>\n    </header>\n    <ul>{list()}</ul>\n  </article>\n\nexport default ProfileList\n","import styled from 'styled-components'\nimport { media } from '../../style/constants'\nimport ProfileList from '../ProfileList'\n\nexport const ListsSection = styled.section`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: auto auto;\n  grid-column-gap: 3rem;\n  grid-row-gap: 5rem;\n  padding: 8rem 0 0;\n  ${media.sm`\n    grid-template-columns: repeat(1, 1fr);\n    grid-column-gap: 0;\n    grid-row-gap: 3rem;\n    padding: 4rem 0 0;\n  `}\n`\n\nexport const ClientsList = styled(ProfileList)`\n  ul {\n    display: grid;\n    grid-template-columns: max-content max-content max-content;\n    grid-template-rows: repeat(6, 1fr);\n    grid-auto-flow: column;\n    grid-column-gap: 5rem;\n    ${media.sm`\n      grid-column-gap: 3rem;\n    `}\n\n    ${media.sm`\n      grid-template-columns: repeat(1, 1fr);\n      grid-template-rows: auto;\n      grid-auto-flow: unset;\n      grid-column-gap: 0;\n    `}\n  }\n`\n","import React from 'react'\nimport ProfileIntroSection from '../ProfileIntroSection'\nimport ProfileListItem from '../ProfileListItem'\nimport EventListItem from '../EventListItem'\nimport Head from '../Head'\nimport ProfileList from '../ProfileList'\nimport { META } from '../../utils/constants'\nimport { DifferentContentWrapper } from '../../style/shared'\nimport { ListsSection, ClientsList } from './style'\nimport InfoCard from \"../InfoCard\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nconst profileContent = () => {\n  const profileQuery = graphql`\n    query {\n      info: allInfoJson {\n        edges {\n          node {\n            profile {\n              heading\n              paragraph\n            }\n            index {\n              heading\n              paragraph\n            }\n          }\n        }\n      }\n    }\n  `\n\n  return (\n    <StaticQuery \n    query={profileQuery}\n    render={data => {\n    const profile = data.info.edges[0].node.profile\n    return (\n      <div>\n        {profile.map(item => \n          item.heading ? \n          (item.paragraph ? \n            (\n              <div>\n              <h1>{item.heading}</h1>\n              <p>{item.paragraph}</p>\n              </div>\n            ) : <div><h1>{item.heading}</h1></div>\n          ) : \n          item.paragraph ? <div><p>{item.paragraph}</p></div> : \"\"\n         )}\n      </div>\n    )}} \n    />)\n }\n\n\nexport default ({ data }) => {\n  const { clients, events, mentions, articles } = data\n  \n  return (\n      <DifferentContentWrapper>\n        <Head \n          {...META.profile}\n          image={META.common.image}\n        />\n        <ProfileIntroSection \n          content={profileContent}\n        />\n        <ListsSection>\n          {events.edges.length > 0 && \n            <ProfileList \n              title='Timeline'\n              list={() => events.edges.map(({ event }, i) => (\n                <EventListItem \n                  key={i}\n                  {...event}\n                />\n              ))}\n            />}\n          {articles.edges.length > 0 && \n            <ProfileList \n              title='Articles'\n              list={() => articles.edges.map(({ article }, i) => (\n                <ProfileListItem \n                  key={i}\n                  {...article}\n                />\n              ))}\n            />}\n          {mentions.edges.length > 0 && \n            <ProfileList \n              title='Featured on'\n              list={() => mentions.edges.map(({ mention }, i) => (\n                <ProfileListItem \n                  key={i}\n                  {...mention}\n                />\n              ))}\n            />}\n          {clients.edges.length > 0 && \n            <ClientsList \n              title='Companies we have worked with'\n              list={() => clients.edges.map(({ client }, i) => (\n                <ProfileListItem \n                  key={i}\n                  {...client}\n                />\n              ))}\n            />}\n        </ListsSection>\n      </DifferentContentWrapper>\n  )\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport ProfileContent from '../components/ProfileContent'\n\nconst profileQuery = graphql`\n  query ProfileQuery {\n    clients: allClientsJson {\n      edges {\n        client: node {\n          name\n        }\n      }\n    }\n    events: allEventsJson {\n      edges {\n        event: node {\n          year\n          position\n          company\n        }\n      }\n    }\n    mentions: allMentionsJson {\n      edges {\n        mention: node {\n          name\n          url\n        }\n      }\n    }\n    articles: allArticlesJson {\n      edges {\n        article: node {\n          name\n          url\n        }\n      }\n    }\n  }\n`\n\nexport default ({ location }) =>\n  <StaticQuery \n    query={profileQuery}\n    render={data => \n      <Layout location={location}>\n        <ProfileContent data={data}/>\n      </Layout>\n    }\n  />\n"],"sourceRoot":""}